{"version":3,"file":"js/about.7dd8caa3.js","mappings":"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","sources":["webpack://base64/./src/views/HomeView.vue","webpack://base64/./src/views/HomeView.vue?1da1"],"sourcesContent":["<template>\r\n  <h1>2page</h1>\r\n  <input type=\"file\" name=\"\" id=\"\" v-on:change=\"readExcel\" />\r\n  <button v-on:click=\"analize\">분석시작</button>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\nexport default {\r\n  name: \"app\",\r\n  data() {\r\n    return {\r\n      father_train: [],\r\n      son_train: [],\r\n      father_test: [],\r\n      son_test: [],\r\n    };\r\n  },\r\n  methods: {\r\n    readExcel(e) {\r\n      const arr1 = [];\r\n      const arr2 = [];\r\n      const arr3 = [];\r\n      const arr4 = [];\r\n      let input = e.target;\r\n      let reader = new FileReader();\r\n      reader.onload = function () {\r\n        let data = reader.result;\r\n        let wordBook = XLSX.read(data, { type: \"binary\" });\r\n        const x = wordBook.Sheets.train;\r\n\r\n        for (let i = 2; i < 757; i++) {\r\n          let line = [],\r\n            line2 = [];\r\n          let str = String.fromCharCode(65) + i;\r\n          line.push(x[str].v);\r\n          let str2 = String.fromCharCode(66) + i;\r\n          line2.push(x[str2].v);\r\n\r\n          arr1.push(line);\r\n          arr2.push(line2);\r\n        }\r\n\r\n        for (let i = 2; i < 325; i++) {\r\n          let line = [],\r\n            line2 = [];\r\n          let str = String.fromCharCode(65) + i;\r\n          line.push(x[str].v);\r\n          let str2 = String.fromCharCode(66) + i;\r\n          line2.push(x[str2].v);\r\n\r\n          arr3.push(line);\r\n          arr4.push(line2);\r\n        }\r\n      };\r\n      reader.readAsBinaryString(input.files[0]);\r\n      this.father_train = arr1;\r\n      this.son_train = arr2;\r\n      this.father_test = arr3;\r\n      this.son_test = arr4;\r\n    },\r\n    analize() {\r\n      const x_train = tf.tensor(this.father_train);\r\n      const y_train = tf.tensor(this.son_train);\r\n\r\n      const X = tf.input({ shape: [1] });\r\n      const Y = tf.layers.dense({ units: 50, activation: \"relu\" }).apply(X);\r\n      const A = tf.layers.dense({ units: 50, activation: \"relu\" }).apply(Y);\r\n      const B = tf.layers.dense({ units: 50, activation: \"relu\" }).apply(A);\r\n      const C = tf.layers.dense({ units: 50, activation: \"relu\" }).apply(B);\r\n      const Z = tf.layers.dense({ units: 1, activation: \"sigmoid\" }).apply(C);\r\n      const model = tf.model({ inputs: X, outputs: Z });\r\n      const compileParam = {\r\n        optimizer: tf.train.adam(),\r\n        loss: tf.losses.meanSquaredError,\r\n      };\r\n      model.compile(compileParam);\r\n\r\n      const x_test = tf.tensor(this.father_test);\r\n      const y_test = tf.tensor(this.son_test);\r\n\r\n      tfvis.show.modelSummary(\r\n        { name: \"Model Architecture\", tab: \"Model\" },\r\n        model\r\n      );\r\n\r\n      const metrics = [\"loss\", \"val_loss\", \"acc\", \"val_acc\"];\r\n      const container = {\r\n        name: \"Model Training\",\r\n        tab: \"Model\",\r\n        styles: { height: \"1000px\" },\r\n      };\r\n      const fitCallbacks = tfvis.show.fitCallbacks(container, metrics);\r\n\r\n      const x_train_max = x_train.max();\r\n      const x_train_min = x_train.min();\r\n      const y_train_max = y_train.max();\r\n      const y_train_min = y_train.min();\r\n\r\n      const normTrain_x = x_train\r\n        .sub(x_train_min)\r\n        .div(x_train_max.sub(x_train_min));\r\n      const normTrain_y = y_train\r\n        .sub(y_train_min)\r\n        .div(y_train_max.sub(y_train_min));\r\n\r\n      const x_test_max = x_test.max();\r\n      const x_test_min = x_test.min();\r\n      const y_test_max = y_test.max();\r\n      const y_test_min = y_test.min();\r\n\r\n      const normTest_x = x_test.sub(x_test_min).div(x_test_max.sub(x_test_min));\r\n      const normTest_y = y_test.sub(y_test_min).div(y_test_max.sub(y_test_min));\r\n\r\n      const fitParam = {\r\n        epochs: 10,\r\n        validationData: [normTest_x, normTest_y],\r\n        shuffle: true,\r\n        callbacks: fitCallbacks,\r\n      };\r\n\r\n      model.fit(normTrain_x, normTrain_y, fitParam).then((_) => {\r\n        const trans1 = this.father_test;\r\n        const trans2 = this.son_test;\r\n        (async function () {\r\n          const result = await model.predict(normTest_x);\r\n          result.print();\r\n          const real_result = await result\r\n            .mul(x_test_max.sub(x_test_min))\r\n            .add(x_test_min);\r\n          real_result.print();\r\n          const result_arr = await real_result.arraySync();\r\n          const original = [];\r\n          const predicted = [];\r\n\r\n          for (let i = 0; i < trans1.length; i++) {\r\n            original[i] = await {\r\n              x: trans1[i][0],\r\n              y: trans2[i][0],\r\n            };\r\n            predicted[i] = await {\r\n              x: trans1[i][0],\r\n              y: result_arr[i][0],\r\n            };\r\n          }\r\n\r\n          tfvis.render.scatterplot(\r\n            { name: \"Model Predictions vs Original Data\" },\r\n            {\r\n              values: [original, predicted],\r\n              series: [\"original\", \"predicted\"],\r\n            },\r\n            {\r\n              xLabel: \"Father's Height\",\r\n              yLabel: \"Son's Height\",\r\n              height: 300,\r\n              zoomToFit: true,\r\n            }\r\n          );\r\n        })();\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n","import { render } from \"./HomeView.vue?vue&type=template&id=0a7efaf8\"\nimport script from \"./HomeView.vue?vue&type=script&lang=js\"\nexport * from \"./HomeView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\jej\\\\proj_4\\\\base64\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","_hoisted_1","type","name","id","onChange","$options","onClick","data","father_train","son_train","father_test","son_test","methods","readExcel","e","arr1","arr2","arr3","arr4","input","target","reader","FileReader","onload","result","wordBook","XLSX","read","x","Sheets","train","i","line","line2","str","String","fromCharCode","push","v","str2","readAsBinaryString","files","this","analize","x_train","tf","tensor","y_train","X","shape","Y","layers","dense","units","activation","apply","A","B","C","Z","model","inputs","outputs","compileParam","optimizer","adam","loss","losses","meanSquaredError","compile","x_test","y_test","tfvis","show","modelSummary","tab","metrics","container","styles","height","fitCallbacks","x_train_max","max","x_train_min","min","y_train_max","y_train_min","normTrain_x","sub","div","normTrain_y","x_test_max","x_test_min","y_test_max","y_test_min","normTest_x","normTest_y","fitParam","epochs","validationData","shuffle","callbacks","fit","then","_","trans1","trans2","predict","print","real_result","mul","add","result_arr","arraySync","original","predicted","length","y","render","scatterplot","values","series","xLabel","yLabel","zoomToFit","__exports__"],"sourceRoot":""}